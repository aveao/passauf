use crate::{dg_parsers, types};

pub static DATA_GROUPS: [DataGroup; 22] = [
    DataGroup {
        name: "EF.COM",
        tag: 0x60,
        dg_num: 0,
        file_id: 0x011E,
        description: "Header and Data Group Presence Information",
        pace_only: false,
        eac_only: false,
        in_lds1: false,
        parser: dg_parsers::ef_com::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.CardAccess",
        tag: 0xff,
        dg_num: 0,
        file_id: 0x011C,
        description: "SecurityInfos (PACE)",
        pace_only: true,
        eac_only: false,
        in_lds1: false,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.CardSecurity",
        tag: 0xff,
        dg_num: 0,
        file_id: 0x011D,
        description: "SecurityInfos for Chip Authentication Mapping (PACE)",
        pace_only: true,
        eac_only: false,
        in_lds1: false,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.ATR/INFO",
        tag: 0xff,
        dg_num: 0,
        file_id: 0x2F01,
        description: "Answer to Reset File",
        pace_only: false,
        eac_only: false,
        in_lds1: false,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DIR",
        tag: 0xff,
        dg_num: 0,
        file_id: 0x2F00,
        description: "Directory",
        pace_only: false,
        eac_only: false,
        in_lds1: false,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DG1",
        tag: 0x61,
        dg_num: 1,
        file_id: 0x0101,
        description: "Details recorded in MRZ",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::ef_dg1::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DG2",
        tag: 0x75,
        dg_num: 2,
        file_id: 0x0102,
        description: "Encoded Face",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::ef_dg2_3_4::parser,
        dumper: dg_parsers::ef_dg2_3_4::dumper,
        is_binary: true,
    },
    DataGroup {
        name: "EF.DG3",
        tag: 0x63,
        dg_num: 3,
        file_id: 0x0103,
        description: "Encoded Finger(s)",
        pace_only: false,
        eac_only: true,
        in_lds1: true,
        parser: dg_parsers::ef_dg2_3_4::parser,
        dumper: dg_parsers::ef_dg2_3_4::dumper,
        is_binary: true,
    },
    DataGroup {
        name: "EF.DG4",
        tag: 0x76,
        dg_num: 4,
        file_id: 0x0104,
        description: "Encoded Eye(s)",
        pace_only: false,
        eac_only: true,
        in_lds1: true,
        parser: dg_parsers::ef_dg2_3_4::parser,
        dumper: dg_parsers::ef_dg2_3_4::dumper,
        is_binary: true,
    },
    DataGroup {
        name: "EF.DG5",
        tag: 0x65,
        dg_num: 5,
        file_id: 0x0105,
        description: "Displayed Portrait",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::ef_dg5::parser,
        dumper: dg_parsers::ef_dg5::dumper,
        is_binary: true,
    },
    DataGroup {
        name: "EF.DG6",
        tag: 0x66,
        dg_num: 6,
        file_id: 0x0106,
        description: "Reserved for Future Use",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DG7",
        tag: 0x67,
        dg_num: 7,
        file_id: 0x0107,
        description: "Displayed Signature or Usual Mark",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::ef_dg7::parser,
        dumper: dg_parsers::ef_dg7::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DG8",
        tag: 0x68,
        dg_num: 8,
        file_id: 0x0108,
        description: "Data Feature(s)",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DG9",
        tag: 0x69,
        dg_num: 9,
        file_id: 0x0109,
        description: "Structure Feature(s)",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DG10",
        tag: 0x6a,
        dg_num: 10,
        file_id: 0x010A,
        description: "Substance Feature(s)",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DG11",
        tag: 0x6b,
        dg_num: 11,
        file_id: 0x010B,
        description: "Additional Personal Detail(s)",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::ef_dg11::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DG12",
        tag: 0x6c,
        dg_num: 12,
        file_id: 0x010C,
        description: "Additional Document Detail(s)",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::ef_dg12::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DG13",
        tag: 0x6d,
        dg_num: 13,
        file_id: 0x010D,
        description: "Optional Detail(s)",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.DG14",
        tag: 0x6e,
        dg_num: 14,
        file_id: 0x010E,
        description: "Security Options",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: true,
    },
    DataGroup {
        name: "EF.DG15",
        tag: 0x6f,
        dg_num: 15,
        file_id: 0x010F,
        description: "Active Authentication Public Key Info",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: true,
    },
    DataGroup {
        name: "EF.DG16",
        tag: 0x70,
        dg_num: 16,
        file_id: 0x0110,
        description: "Person(s) to Notify",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
    DataGroup {
        name: "EF.SOD",
        tag: 0x77,
        dg_num: 0,
        file_id: 0x011D,
        description: "Document Security Object",
        pace_only: false,
        eac_only: false,
        in_lds1: true,
        parser: dg_parsers::generic::parser,
        dumper: dg_parsers::generic::dumper,
        is_binary: false,
    },
];

/// Enum of all known DataGroups
///
/// Order must match the DATA_GROUP, as we fetch by index based on this.
#[allow(dead_code)]
pub enum DataGroupEnum {
    EFCom = 0,
    EFCardAccess,
    EFCardSecurity,
    EFAtrInfo,
    EFDir,
    EFDg1,
    EFDg2,
    EFDg3,
    EFDg4,
    EFDg5,
    EFDg6,
    EFDg7,
    EFDg8,
    EFDg9,
    EFDg10,
    EFDg11,
    EFDg12,
    EFDg13,
    EFDg14,
    EFDg15,
    EFDg16,
    EFSod,
}

#[derive(Debug)]
#[allow(dead_code)]
pub struct DataGroup {
    pub name: &'static str,
    pub tag: u8,
    pub dg_num: u8,
    pub file_id: u16,
    pub description: &'static str,
    pub pace_only: bool,
    pub eac_only: bool,
    // Whether the DG is under MF or eMRTD LDS1 applet.
    // For more info, see ICAO 9303 p10, page 39, figure 3
    // Alternatively: https://elixi.re/i/4tlij260gf43v.png
    // We basically can only read these if the applet is not selected.
    pub in_lds1: bool,
    // Whether this file should be read when printing info
    pub is_binary: bool,
    pub parser: fn(&Vec<u8>, &DataGroup, bool) -> Option<types::ParsedDataGroup>,
    pub dumper: fn(
        &Vec<u8>,
        &Option<types::ParsedDataGroup>,
        &std::path::Path,
        &String,
    ) -> Result<(), std::io::Error>,
}
